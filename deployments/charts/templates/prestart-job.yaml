apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-prestart
  labels:
    app.kubernetes.io/name: prestart
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  annotations:
    "helm.sh/hook-weight": "-4"
spec:
  backoffLimit: 6
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prestart
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: prestart
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          command: ["bash", "scripts/prestart.sh"]
          env:
            - name: DOMAIN
              value: {{ .Values.global.domain | quote }}
            - name: PROJECT_NAME
              value: {{ .Values.global.projectName | quote }}
            - name: FRONTEND_HOST
              value: {{ .Values.backend.env.FRONTEND_HOST | quote }}
            - name: ENVIRONMENT
              value: {{ .Values.global.environment | quote }}
            - name: BACKEND_CORS_ORIGINS
              value: {{ .Values.backend.env.BACKEND_CORS_ORIGINS | quote }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: SECRET_KEY
            - name: FIRST_SUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: FIRST_SUPERUSER
            - name: FIRST_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: FIRST_SUPERUSER_PASSWORD
            - name: POSTGRES_SERVER
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.service.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgres-password
            - name: SMTP_HOST
              value: {{ .Values.backend.env.SMTP_HOST | quote }}
            - name: SMTP_PORT
              value: {{ .Values.backend.env.SMTP_PORT | quote }}
            - name: SMTP_TLS
              value: {{ .Values.backend.env.SMTP_TLS | quote }}
            - name: EMAILS_FROM_EMAIL
              value: {{ .Values.backend.env.EMAILS_FROM_EMAIL | quote }}
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi 